{"version":3,"file":"index.mjs","sources":["../node_modules/style-inject/dist/style-inject.es.js","../node_modules/tslib/tslib.es6.js","../src/components/contexts/FormProvider.tsx","../src/components/formElements/datePickerField.tsx","../src/components/formElements/DropDownField.tsx","../src/components/formElements/EmailField.tsx","../src/components/formElements/LabelField.tsx","../src/components/formElements/NumberInputField.tsx","../src/components/formElements/PhoneNumberField.tsx","../src/components/formElements/SliderField.tsx","../src/components/formElements/TextAreaField.tsx","../src/utils/defaults.tsx","../src/components/formElements/TextElementField.tsx","../src/components/Myform.tsx","../src/components/formElements/ConfirmPassword.tsx","../src/utils/PasswordCheck.tsx","../src/components/formElements/ToggleButton.tsx","../src/components/formElements/CheckList.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import React, { createContext, useState, ReactNode, useRef } from \"react\";\r\n\r\n// Define the form context type\r\ninterface FormContextType {\r\n  formData: Record<string, string>;\r\n  handleChange: (name: string, value: string) => void;\r\n  handleSubmit: (callback: (data: Record<string, any>) => void) => void;\r\n  addRef: (\r\n    name: string,\r\n    ref: React.RefObject<\r\n      HTMLInputElement | HTMLDivElement | HTMLTextAreaElement\r\n    >\r\n  ) => void;\r\n  refs: Record<\r\n    string,\r\n    React.RefObject<HTMLInputElement | HTMLDivElement | HTMLTextAreaElement>\r\n  >; // Store refs\r\n  getRef: (\r\n    name: string\r\n  ) =>\r\n    | React.RefObject<HTMLInputElement | HTMLDivElement | HTMLTextAreaElement>\r\n    | undefined; // Get ref method\r\n}\r\n\r\n// Initialize the context\r\nexport const FormContext = createContext<FormContextType>({\r\n  formData: {},\r\n  handleChange: () => {},\r\n  handleSubmit: () => {},\r\n  addRef: () => {},\r\n  refs: {},\r\n  getRef: () => undefined, // Set default to return undefined\r\n});\r\n\r\n// Create the FormProvider\r\ninterface FormProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const FormProvider: React.FC<FormProviderProps> = ({ children }) => {\r\n  const [formData, setFormData] = useState<Record<string, string>>({});\r\n  const [refs, setRefs] = useState<\r\n    Record<\r\n      string,\r\n      React.RefObject<HTMLInputElement | HTMLDivElement | HTMLTextAreaElement>\r\n    >\r\n  >({}); // Store refs\r\n\r\n  // Handle field value changes\r\n  const handleChange = (name: string, value: string) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (callback: (data: Record<string, any>) => void) => {\r\n    let hasError = false;\r\n    console.log(\"Form Data: \", formData);\r\n    // Check for errors in form data\r\n    for (const key in formData) {\r\n      if (key.endsWith(\"_error\") && formData[key]) {\r\n        hasError = true;\r\n        // Focus the input corresponding to the error\r\n        const ref = refs[key.replace(\"_error\", \"\")]; // Get the input ref\r\n        if (ref && ref.current) {\r\n          ref.current.focus(); // Focus the input\r\n        }\r\n      }\r\n    }\r\n\r\n    // If there's an error, do not proceed with submission\r\n    if (!hasError) {\r\n      console.log(formData);\r\n      alert(\"Submitting form data\");\r\n      callback(formData); // Trigger the callback with form data\r\n    } else {\r\n      alert(\"Form contains errors, submission aborted.\");\r\n    }\r\n  };\r\n\r\n  // Add ref method\r\n  const addRef = (\r\n    name: string,\r\n    ref: React.RefObject<\r\n      HTMLInputElement | HTMLDivElement | HTMLTextAreaElement\r\n    >\r\n  ) => {\r\n    setRefs((prevRefs) => ({\r\n      ...prevRefs,\r\n      [name]: ref,\r\n    }));\r\n  };\r\n\r\n  // Get ref method\r\n  const getRef = (\r\n    name: string\r\n  ):\r\n    | React.RefObject<HTMLInputElement | HTMLDivElement | HTMLTextAreaElement>\r\n    | undefined => {\r\n    return refs[name]; // Return the specific ref based on name\r\n  };\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{ formData, handleChange, handleSubmit, addRef, refs, getRef }}\r\n    >\r\n      {children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\n// import DatePickerFieldProps from \"../../types/\"; // Define this type in your types folder\r\ninterface DatePickerFieldProps {\r\n  placeholder?: string;\r\n  isRequired?: boolean;\r\n  styles?: React.CSSProperties;\r\n  className?: string;\r\n  name: string;\r\n}\r\nconst DatePickerField: React.FC<DatePickerFieldProps> = ({\r\n  placeholder = \"Select date\",\r\n  isRequired = false,\r\n  styles = {},\r\n  className = \"\",\r\n  name, // Name prop to identify this field in the form context\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"DatePickerField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the input ref when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef); // Add ref to context\r\n    }\r\n\r\n    return () => {\r\n      // Optionally, you could remove the ref on unmount\r\n      // removeRef(name);\r\n    };\r\n  }, [name]); // No state dependencies to prevent infinite loops\r\n\r\n  // Validate date input\r\n  const validateDate = (inputValue: string) => {\r\n    if (isRequired && !inputValue) {\r\n      return false; // Required validation\r\n    }\r\n    return true; // If passed validation\r\n  };\r\n\r\n  // Handle input change and update form context\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    const isValid = validateDate(inputValue);\r\n\r\n    // Update the form context with the new value only if it has changed\r\n    if (formData[name] !== inputValue) {\r\n      handleChange(name, inputValue);\r\n    }\r\n\r\n    // Set error state directly in formData or handle display via form context\r\n    handleChange(`${name}_error`, isValid ? \"\" : \"Date is required.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mb-4\">\r\n      <input\r\n        id={name}\r\n        ref={inputRef}\r\n        type=\"date\"\r\n        value={formData[name] || \"\"}\r\n        placeholder={placeholder}\r\n        onChange={handleInputChange}\r\n        required={isRequired}\r\n        className={`bg-gray-50 border text-gray-900 text-sm rounded-lg block w-full p-2.5 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 \r\n          ${\r\n            formData[`${name}_error`]\r\n              ? \"border-red-500 focus:border-red-500 focus:ring-red-500 dark:border-red-500 dark:focus:ring-red-500\"\r\n              : \"border-gray-300\"\r\n          } \r\n          ${className}`}\r\n        style={styles} // Apply any custom styles\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"absolute text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePickerField;\r\n","import React, { useRef, useEffect, useContext, useState } from \"react\";\r\nimport { DropdownProps } from \"../../types/DropDownFieldProps\";\r\nimport { FormContext } from \"../contexts/FormProvider\";\r\n\r\nconst DropDownField: React.FC<DropdownProps> = ({\r\n  options,\r\n  name, // Name prop for form identification\r\n  placeholder = \"Select an option\",\r\n  isRequired = false,\r\n  styles = {},\r\n  className = \"\",\r\n  listItemsClassName = \"\",\r\n  listItemstyles = {},\r\n}) => {\r\n  const inputRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Access the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"DropDownField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n  const [isOpen, setIsOpen] = useState(false); // Manage dropdown open/close\r\n\r\n  // Register the dropdown ref when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef);\r\n    }\r\n  }, [name]);\r\n\r\n  // Handle option change\r\n  const handleOptionChange = (value: string) => {\r\n    handleChange(name, value);\r\n    setIsOpen(false); // Close dropdown after selection\r\n    handleChange(\r\n      `${name}_error`,\r\n      isRequired && !value ? \"This field is required\" : \"\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={styles} className={`relative mb-4 ${className}`}>\r\n      <button\r\n        id={name}\r\n        onClick={() => setIsOpen(!isOpen)} // Toggle dropdown open/close\r\n        className={`text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none \r\n          focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center \r\n          dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800`}\r\n      >\r\n        {formData[name]\r\n          ? options.find((opt) => opt.value === formData[name])?.label\r\n          : placeholder}\r\n        <svg\r\n          className=\"w-2.5 h-2.5 ms-3\"\r\n          aria-hidden=\"true\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 10 6\"\r\n        >\r\n          <path\r\n            stroke=\"currentColor\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"m1 1 4 4 4-4\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"absolute z-10  divide-y divide-gray-100 rounded-lg  w-full max-h-60 overflow-y-auto\">\r\n          <ul\r\n            className=\"py-2 text-sm text-gray-700 dark:text-gray-200\"\r\n            aria-labelledby=\"dropdownDelayButton\"\r\n          >\r\n            {options.map((option, index) => (\r\n              <li key={index}>\r\n                <div\r\n                  onClick={() => handleOptionChange(option.value)} // Change value on click\r\n                  className={\r\n                    \"block bg-white shadow max-w-xs mx-auto px-4 py-2 text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white cursor-pointer \" +\r\n                    `${listItemsClassName}`\r\n                  }\r\n                  style={listItemstyles}\r\n                >\r\n                  {option.label}\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {formData[`${name}_error`] && (\r\n        <div className=\"text-red-500 text-sm mt-1\">\r\n          {formData[`${name}_error`]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDownField;\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\nimport EmailFieldProps from \"../../types/EmailFieldProps\"; // Adjust path as necessary\r\n\r\nconst EmailField: React.FC<EmailFieldProps> = ({\r\n  styles = {},\r\n  className = \"\",\r\n  isRequired = false,\r\n  placeholder = \"\",\r\n  name, // Ensure the name prop is passed to identify this field\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"EmailField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the input ref when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef); // Add ref to context\r\n    }\r\n  }, [name]); // Add addRef to dependencies\r\n\r\n  // Email validation logic\r\n  const validateEmail = (inputValue: string) => {\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Basic email regex\r\n    let error = \"\";\r\n\r\n    if (isRequired && inputValue === \"\") {\r\n      error = \"Email is required.\";\r\n    } else if (inputValue && !emailPattern.test(inputValue)) {\r\n      error = \"Please enter a valid email address.\";\r\n    }\r\n\r\n    // Update error state in form context\r\n    handleChange(`${name}_error`, error);\r\n  };\r\n\r\n  // Handle input change and update form context\r\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n\r\n    // Update the form context with the new value\r\n    handleChange(name, inputValue);\r\n\r\n    // Validate the input as it changes\r\n    validateEmail(inputValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mb-4\">\r\n      <input\r\n        type=\"email\"\r\n        id={name}\r\n        ref={inputRef}\r\n        value={formData[name] || \"\"}\r\n        placeholder={placeholder}\r\n        onChange={handleChangeInput}\r\n        required={isRequired}\r\n        className={`bg-gray-50 border text-gray-900 text-sm rounded-lg block w-full p-2.5 focus:ring-blue-400 focus:border-blue-400 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 \r\n          ${\r\n            formData[`${name}_error`]\r\n              ? \"border-red-500 focus:border-red-500 focus:ring-red-500 dark:border-red-500 dark:focus:ring-red-500\"\r\n              : \"border-gray-300\"\r\n          } ${className}`}\r\n        style={styles}\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"absolute text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailField;\r\n","import React from \"react\";\r\n\r\ninterface LabelProps {\r\n  text: string; // Text to display in the label\r\n  isRequired?: boolean; // Whether the label is for a required field\r\n  styles?: React.CSSProperties; // Custom styles for the label\r\n  className?: string; // Additional class names for the label\r\n  For?: string; // For attribute for the label\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({\r\n  text,\r\n  isRequired = false,\r\n  styles = {},\r\n  className = \"\",\r\n  For = \"\",\r\n}) => {\r\n  return (\r\n    <div style={styles} className={`flex items-center m-1 ${className}`}>\r\n      <label htmlFor={For} className=\"block text-gray-700 text-sm font-bold \">\r\n        {text}\r\n      </label>\r\n      {isRequired && <span className=\"text-red-500 mr-1 ml-1\">*</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\";\r\n\r\ninterface NumberInputFieldProps {\r\n  name: string; // Unique name for form context\r\n  placeholder?: string; // Placeholder text for the input\r\n  isRequired?: boolean; // Whether the field is required\r\n  min?: number; // Minimum value for the input\r\n  max?: number; // Maximum value for the input\r\n  styles?: React.CSSProperties; // Custom styles for the input container\r\n  className?: string; // Additional class names for the input\r\n}\r\n\r\nconst NumberInputField: React.FC<NumberInputFieldProps> = ({\r\n  name,\r\n  placeholder = \"Enter a number\",\r\n  isRequired = false,\r\n  min,\r\n  max,\r\n  styles = {},\r\n  className = \"\",\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Access form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"NumberInputField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the input ref when component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef);\r\n    }\r\n  }, [name]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let inputValue = e.target.value;\r\n\r\n    let errorMessage = \"\";\r\n\r\n    // Validate value\r\n    if (isRequired && inputValue === \"\") {\r\n      errorMessage = \"This field is required and enter valid number.\";\r\n    } else {\r\n      const numberValue = parseFloat(inputValue);\r\n      if (isNaN(numberValue)) {\r\n        console.log(\"numberValue\", numberValue);\r\n        errorMessage = \"Please enter a valid number.\";\r\n      } else if (min !== undefined && numberValue < min) {\r\n        errorMessage = `Value must be at least ${min}.`;\r\n      } else if (max !== undefined && numberValue > max) {\r\n        errorMessage = `Value must not exceed ${max}.`;\r\n      }\r\n    }\r\n\r\n    handleChange(name, inputValue ? inputValue.toString() : \"\");\r\n    handleChange(`${name}_error`, errorMessage);\r\n  };\r\n\r\n  return (\r\n    <div style={styles} className={`mb-4 ${className}`}>\r\n      <input\r\n        type=\"number\"\r\n        id={name}\r\n        ref={inputRef}\r\n        value={formData[name] || \"\"}\r\n        onChange={handleInputChange}\r\n        placeholder={placeholder}\r\n        className={`bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg \r\n          focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \r\n          dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white \r\n          dark:focus:ring-blue-500 dark:focus:border-blue-500 ${\r\n            formData[`${name}_error`] ? \"border-red-500\" : \"border-gray-300\"\r\n          }`}\r\n        required={isRequired}\r\n        min={min} // Set min value if provided\r\n        max={max} // Set max value if provided\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberInputField;\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust the import path as needed\r\nimport PhoneNumberFieldProps from \"../../types/phoneNumberProps\";\r\n\r\nconst PhoneNumberField: React.FC<PhoneNumberFieldProps> = ({\r\n  styles = {},\r\n  className = \"\",\r\n  isRequired = false,\r\n  placeholder = \"\",\r\n  name, // Name prop to identify this field in the form context\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"PhoneNumberField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the input ref when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef); // Add ref to context\r\n    }\r\n\r\n    return () => {\r\n      // Optionally, you could remove the ref on unmount\r\n      // removeRef(name);\r\n    };\r\n  }, [name]);\r\n\r\n  // Phone number validation logic\r\n  const validatePhoneNumber = (inputValue: string) => {\r\n    const phonePattern = /^\\d{10}$/; // Basic pattern for 10-digit phone numbers\r\n    if (isRequired && inputValue === \"\") {\r\n      return false;\r\n    } else if (!phonePattern.test(inputValue)) {\r\n      return false;\r\n    }\r\n    return true; // No error\r\n  };\r\n\r\n  // Handle input change and update form context\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    const isValid = validatePhoneNumber(inputValue);\r\n\r\n    // Update the form context with the new value\r\n    if (formData[name] !== inputValue) {\r\n      handleChange(name, inputValue);\r\n    }\r\n\r\n    // Set error state directly in formData or handle display via form context\r\n    handleChange(\r\n      `${name}_error`,\r\n      isValid ? \"\" : \"Please enter a valid 10-digit phone number.\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mb-4\">\r\n      <input\r\n        id={name}\r\n        type=\"tel\" // Use 'tel' for phone number input\r\n        ref={inputRef}\r\n        value={formData[name] || \"\"}\r\n        placeholder={placeholder}\r\n        onChange={handleInputChange}\r\n        required={isRequired}\r\n        className={`bg-gray-50 border text-gray-900 text-sm rounded-lg block w-full p-2.5 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 \r\n          ${\r\n            formData[`${name}_error`]\r\n              ? \"border-red-500 focus:border-red-500 focus:ring-red-500 dark:border-red-500 dark:focus:ring-red-500\"\r\n              : \"border-gray-300\"\r\n          } ${className}`}\r\n        style={styles}\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"absolute text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneNumberField;\r\n","import React, { useEffect, useRef, useContext, useCallback } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\";\r\n\r\ninterface SliderFieldProps {\r\n  name: string; // Unique identifier for form context\r\n  min?: number; // Minimum value for the slider\r\n  max?: number; // Maximum value for the slider\r\n  initialValue?: number; // Initial value for the slider\r\n  styles?: React.CSSProperties; // Custom styles for the input container\r\n  className?: string; // Additional class names for the input\r\n}\r\n\r\nconst SliderField: React.FC<SliderFieldProps> = ({\r\n  name,\r\n  min = 0,\r\n  max = 100,\r\n  initialValue = 50,\r\n  styles = {},\r\n  className = \"\",\r\n}) => {\r\n  const sliderRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Access form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"SliderField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Throttling function\r\n  const throttle = useCallback(\r\n    (func: (...args: any[]) => void, limit: number) => {\r\n      let lastFunc: ReturnType<typeof setTimeout>;\r\n      let lastRan: number;\r\n\r\n      return function (...args: any[]) {\r\n        if (!lastRan) {\r\n          func(...args);\r\n          lastRan = Date.now();\r\n        } else {\r\n          clearTimeout(lastFunc);\r\n          lastFunc = setTimeout(() => {\r\n            if (Date.now() - lastRan >= limit) {\r\n              func(...args);\r\n              lastRan = Date.now();\r\n            }\r\n          }, limit - (Date.now() - lastRan));\r\n        }\r\n      };\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleSliderChange = (value: number) => {\r\n    handleChange(name, value.toString());\r\n  };\r\n\r\n  // Throttled version of handleSliderChange\r\n  const throttledHandleChange = throttle(handleSliderChange, 100);\r\n\r\n  // Register slider ref on component mount\r\n  useEffect(() => {\r\n    if (sliderRef.current) {\r\n      addRef(name, sliderRef);\r\n    }\r\n    // Set initial value\r\n    handleChange(name, initialValue.toString());\r\n  }, [name]);\r\n\r\n  // Ensure values are numbers\r\n  const value = Number(formData[name]) || initialValue; // Convert to number\r\n  const tooltipPosition: number = ((value - min) / (max - min)) * 100;\r\n\r\n  return (\r\n    <div style={styles} className={`relative mb-4 ${className}`}>\r\n      {/* Background for filled portion */}\r\n      <div className=\"relative mb-1 h-2 bg-gray-200 rounded-lg dark:bg-gray-700\">\r\n        <div\r\n          className=\"absolute h-full bg-blue-600 rounded-lg\"\r\n          style={{\r\n            width: `${tooltipPosition}%`, // Fill percentage based on slider value\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* Tooltip */}\r\n      <div\r\n        className=\"absolute left-0 transform -translate-x-1/2 -translate-y-full mb-1 text-white bg-blue-600 rounded-lg text-sm p-1\"\r\n        style={{\r\n          left: `calc(${tooltipPosition}% + 0.5rem)`, // Position tooltip above slider thumb\r\n        }}\r\n      >\r\n        {value} {/* Display current slider value */}\r\n      </div>\r\n\r\n      <input\r\n        id={name}\r\n        ref={sliderRef}\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={value}\r\n        onChange={(e) => throttledHandleChange(Number(e.target.value))}\r\n        className=\"w-full h-2 bg-transparent appearance-none cursor-pointer\"\r\n      />\r\n\r\n      {/* Min and Max values display */}\r\n      <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-300\">\r\n        <span>{min}</span>\r\n        <span>{max}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderField;\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\nimport TextAreaFieldProps from \"../../types/TextFeildProps\"; // Define this type in your types folder\r\n\r\nconst TextAreaField: React.FC<TextAreaFieldProps> = ({\r\n  placeholder = \"Enter text here...\",\r\n  isRequired = false,\r\n  styles = {},\r\n  className = \"\",\r\n  rows = 4,\r\n  name, // Name prop to identify this field in the form context\r\n  validator,\r\n}) => {\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"TextAreaField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the textarea ref when the component mounts\r\n  useEffect(() => {\r\n    if (textAreaRef.current) {\r\n      addRef(name, textAreaRef); // Add ref to context\r\n    }\r\n\r\n    return () => {\r\n      // Optionally, you could remove the ref on unmount\r\n      // removeRef(name);\r\n    };\r\n  }, [name]); // No state dependencies to prevent infinite loops\r\n\r\n  // Validate textarea input\r\n  const validate = (inputValue: string) => {\r\n    if (isRequired && !inputValue) {\r\n      return false; // Required validation\r\n    }\r\n    return validator ? validator(inputValue) : true; // Use custom validator if provided\r\n  };\r\n\r\n  // Handle textarea change and update form context\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const inputValue = e.target.value;\r\n    const isValid = validate(inputValue);\r\n\r\n    // Update the form context with the new value only if it has changed\r\n    if (formData[name] !== inputValue) {\r\n      handleChange(name, inputValue);\r\n    }\r\n\r\n    // Set error state directly in formData or handle display via form context\r\n    handleChange(`${name}_error`, isValid ? \"\" : \"Invalid input.\");\r\n  };\r\n\r\n  return (\r\n    <div className={`relative`} style={styles}>\r\n      <textarea\r\n        id={name}\r\n        ref={textAreaRef}\r\n        value={formData[name] || \"\"}\r\n        onChange={handleInputChange}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className={`border rounded-lg p-2 w-full ${\r\n          formData[`${name}_error`] ? \"border-red-500\" : \"border-gray-300\"\r\n        } ${className}`}\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\" absolute  text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextAreaField;\r\n","export const defaultValidators = {\r\n  alpha: (value: string) => /^[a-zA-Z]*$/.test(value),\r\n  numeric: (value: string) => /^[0-9]*$/.test(value),\r\n  alphanumeric: (value: string) => /^[a-zA-Z0-9]*$/.test(value),\r\n};\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\nimport { defaultValidators } from \"../../utils/defaults\";\r\nimport TextFieldProps from \"../../types/TextFeildProps\";\r\n\r\n// Define the valid validator types\r\ntype ValidatorType = keyof typeof defaultValidators;\r\n\r\nconst TextField: React.FC<TextFieldProps> = ({\r\n  styles = {},\r\n  className = \"\",\r\n  isRequired = false,\r\n  validator,\r\n  placeholder = \"\",\r\n  type = \"text\", // Default to text\r\n  name, // Name prop to identify this field in the form context\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"TextField must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the input ref when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef); // Add ref to context\r\n    }\r\n\r\n    return () => {\r\n      // Optionally, you could remove the ref on unmount\r\n      // removeRef(name);\r\n    };\r\n  }, [name]); // No state dependencies to prevent infinite loops\r\n\r\n  // Validation logic based on the \"type\" or \"validator\" prop\r\n  const validate = (inputValue: string) => {\r\n    if (isRequired && inputValue === \"\") {\r\n      return false;\r\n    }\r\n\r\n    let isValid = true;\r\n    // Use built-in validation based on the \"type\" prop, or fallback to custom validator\r\n    if (validator) {\r\n      isValid = validator(inputValue);\r\n    } else if (type && defaultValidators[type as ValidatorType]) {\r\n      isValid = defaultValidators[type as ValidatorType](inputValue);\r\n    } else {\r\n      isValid = defaultValidators.alphanumeric(inputValue);\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  // Handle input change and update form context\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    const isValid = validate(inputValue);\r\n\r\n    // Update the form context with the new value only if it has changed\r\n    if (formData[name] !== inputValue) {\r\n      handleChange(name, inputValue);\r\n    }\r\n\r\n    // Set error state directly in formData or handle display via form context\r\n    handleChange(`${name}_error`, isValid ? \"\" : \"Invalid input\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative mb-4\">\r\n      <input\r\n        id={name}\r\n        ref={inputRef}\r\n        value={formData[name] || \"\"}\r\n        placeholder={placeholder}\r\n        onChange={handleInputChange}\r\n        required={isRequired}\r\n        className={`bg-gray-50 border text-gray-900 text-sm rounded-lg block w-full p-2.5 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 \r\n          ${\r\n            formData[`${name}_error`]\r\n              ? \"border-red-500 focus:border-red-500 focus:ring-red-500 dark:border-red-500 dark:focus:ring-red-500\"\r\n              : \"border-gray-300\"\r\n          } \r\n          ${className}`}\r\n        style={styles} // Apply any custom styles\r\n      />\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"absolute text-red-500 text-sm mt-1\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useContext } from \"react\";\r\nimport { FormContext } from \"../components/contexts/FormProvider\"; // Adjust the import based on your folder structure\r\n\r\ninterface MyFormProps {\r\n  children?: React.ReactNode;\r\n  onSubmit: (data: Record<string, string>) => void; // Prop for the submit handler\r\n  buttonClasses?: string;\r\n  buttonStyles?: React.CSSProperties;\r\n  styles?: React.CSSProperties;\r\n  className?: string;\r\n  formtitle?: string;\r\n}\r\n\r\nconst MyForm: React.FC<MyFormProps> = ({\r\n  onSubmit,\r\n  children,\r\n  buttonClasses = \"\",\r\n  buttonStyles = {},\r\n  styles = {},\r\n  className = \"\",\r\n  formtitle = \"\",\r\n}) => {\r\n  const { handleSubmit } = useContext(FormContext) || {\r\n    handleSubmit: () => console.warn(\"FormContext is not available.\"),\r\n  };\r\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    handleSubmit(onSubmit); // Trigger form submission with the passed-in onSubmit function\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={\r\n       `mb-0 mt-6 space-y-4 rounded-lg p-4 shadow-lg sm:p-6 lg:p-8 ${className}`\r\n      }\r\n      onSubmit={onFormSubmit}\r\n      style={styles}\r\n      // style={{ width: \"100%\" }}\r\n    >\r\n      <h1 className=\"text-center text-2xl font-bold text-blue-600 sm:text-3xl\">\r\n        {formtitle}\r\n      </h1>\r\n      {children}\r\n      <button\r\n        type=\"submit\"\r\n        className={`w-full bg-blue-500 text-white p-2 rounded-lg ${buttonClasses}`}\r\n        style={buttonStyles}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\nimport Label from \"./LabelField\";\r\nimport PasswordConfirmationProps from \"../../types/CheckPasswordType\";\r\nimport validatePassword2 from \"../../utils/PasswordCheck\";\r\n\r\nconst PasswordConfirmation: React.FC<PasswordConfirmationProps> = ({\r\n  isRequired = false,\r\n  styles = {},\r\n  className = \"\",\r\n  placeholder = \"Enter password\",\r\n  name,\r\n  minLetters = 1,\r\n  totalLength = 8,\r\n  minSpecialChars = 1,\r\n  minCapitalLetters = 1,\r\n  passwordinputStyles = {},\r\n  passwordinputClassName = \"\",\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const confirmRef = useRef<HTMLInputElement>(null);\r\n  const formContext = useContext(FormContext);\r\n\r\n  if (!formContext) {\r\n    throw new Error(\"PasswordConfirmation must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n  const [error, setError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n\r\n  // Register the input refs when the component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      addRef(name, inputRef); // Add password ref to context\r\n    }\r\n    if (confirmRef.current) {\r\n      addRef(`${name}_confirm`, confirmRef); // Add confirm password ref to context\r\n    }\r\n  }, [name]); // No state dependencies to prevent infinite loops\r\n\r\n  // Validation logic\r\n  const validatePassword = (password: string) => {\r\n    return validatePassword2({\r\n      password,\r\n      totalLength,\r\n      minLetters,\r\n      minCapitalLetters,\r\n      minSpecialChars,\r\n    });\r\n  };\r\n\r\n  // Handle input change and update form context\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    handleChange(name, inputValue); // Update password field\r\n\r\n    // Validate password\r\n    const validationMessage = validatePassword(inputValue);\r\n    setError(validationMessage); // Update error state\r\n  };\r\n\r\n  // Handle confirm password change\r\n  const handleConfirmInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const confirmValue = e.target.value;\r\n    if (validatePassword(formData[name]) == \"\") {\r\n      // Validate confirm password against the password\r\n      if (formData[name] !== confirmValue) {\r\n        setError(\"Passwords do not match.\");\r\n        handleChange(`${name}_confirm`, confirmValue); // Update confirm password field\r\n      } else {\r\n        setError(\"\"); // Clear error if passwords match\r\n        handleChange(`${name}_confirm`, confirmValue); // Update confirm password field\r\n      }\r\n    } else {\r\n      handleChange(`${name}_error`, confirmValue); // Update confirm password field\r\n    }\r\n  };\r\n\r\n  // Toggle password visibility\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div className={`mb-4 ${className}`} style={styles}>\r\n      {/* Password Input */}\r\n      <div className=\"max-w-sm\">\r\n        <Label For={`${name}`} text=\"Password\" isRequired={isRequired} />\r\n        <div className=\"relative\">\r\n          <input\r\n            id={name}\r\n            ref={inputRef}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder={placeholder}\r\n            onChange={handleInputChange}\r\n            required={isRequired}\r\n            className={\r\n              `py-3 ps-4 pe-10 block w-full  rounded-lg text-sm \r\n              focus:border-blue-500 focus:ring-blue-500 bg-gray-50 border-gray-400\r\n              ${error ? \"border-red-500\" : \"border-gray-600\"} \r\n              dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600` +\r\n              \" \" +\r\n              passwordinputClassName\r\n            }\r\n            style={passwordinputStyles}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={togglePasswordVisibility}\r\n            className=\"absolute inset-y-0 right-0 flex items-center px-3 cursor-pointer text-gray-400 rounded-e-md focus:outline-none focus:text-blue-600 dark:text-neutral-600 dark:focus:text-blue-500\"\r\n          >\r\n            <svg\r\n              className=\"shrink-0 size-3.5\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"\r\n              ></path>\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"\r\n              ></path>\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"\r\n              ></path>\r\n              <line\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                x1=\"2\"\r\n                x2=\"22\"\r\n                y1=\"2\"\r\n                y2=\"22\"\r\n              ></line>\r\n              <path\r\n                className={showPassword ? \"hs-password-active:block\" : \"hidden\"}\r\n                d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"\r\n              ></path>\r\n              <circle\r\n                className={showPassword ? \"hs-password-active:block\" : \"hidden\"}\r\n                cx=\"12\"\r\n                cy=\"12\"\r\n                r=\"3\"\r\n              ></circle>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Confirm Password Input */}\r\n      <div className=\"max-w-sm mt-4\">\r\n        <Label\r\n          For={`${name}_confirm`}\r\n          text=\"Confirm Password\"\r\n          isRequired={isRequired}\r\n        />\r\n        <div className=\"relative\">\r\n          <input\r\n            id={`${name}_confirm`}\r\n            ref={confirmRef}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={handleConfirmInputChange}\r\n            required={isRequired}\r\n            className={\r\n              `py-3 ps-4 pe-10 block w-full  rounded-lg text-sm \r\n              focus:border-blue-500 focus:ring-blue-500 bg-gray-50 border-gray-400\r\n              ${error ? \"border-red-500\" : \"border-gray-600\"} \r\n              dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:placeholder-neutral-500 dark:focus:ring-neutral-600` +\r\n              \" \" +\r\n              passwordinputClassName\r\n            }\r\n            style={passwordinputStyles}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={togglePasswordVisibility}\r\n            className=\"absolute inset-y-0 right-0 flex items-center px-3 cursor-pointer text-gray-400 rounded-e-md focus:outline-none focus:text-blue-600 dark:text-neutral-600 dark:focus:text-blue-500\"\r\n          >\r\n            <svg\r\n              className=\"shrink-0 size-3.5\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"\r\n              ></path>\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"\r\n              ></path>\r\n              <path\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"\r\n              ></path>\r\n              <line\r\n                className={\r\n                  showPassword ? \"hidden\" : \"hs-password-active:hidden\"\r\n                }\r\n                x1=\"2\"\r\n                x2=\"22\"\r\n                y1=\"2\"\r\n                y2=\"22\"\r\n              ></line>\r\n              <path\r\n                className={showPassword ? \"hs-password-active:block\" : \"hidden\"}\r\n                d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"\r\n              ></path>\r\n              <circle\r\n                className={showPassword ? \"hs-password-active:block\" : \"hidden\"}\r\n                cx=\"12\"\r\n                cy=\"12\"\r\n                r=\"3\"\r\n              ></circle>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      <div className=\"min-h-4\">\r\n        {error && <p className=\"text-red-500 text-sm\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordConfirmation;\r\n","// Validation logic\r\ninterface PasswordCheck {\r\n  password: string;\r\n  totalLength: number;\r\n  minLetters: number;\r\n  minCapitalLetters: number;\r\n  minSpecialChars: number;\r\n}\r\nconst validatePassword = ({\r\n  password,\r\n  totalLength,\r\n  minLetters,\r\n  minCapitalLetters,\r\n  minSpecialChars,\r\n}: PasswordCheck): string => {\r\n  const letterRegex = /[a-zA-Z]/g; // Matches letters\r\n  const specialCharRegex = /[!@#$%^&*]/g; // Matches special characters\r\n  const capitalLetterRegex = /[A-Z]/g; // Matches capital letters\r\n\r\n  const lettersCount = (password.match(letterRegex) || []).length;\r\n  const specialCharsCount = (password.match(specialCharRegex) || []).length;\r\n  const capitalLettersCount = (password.match(capitalLetterRegex) || []).length;\r\n\r\n  let message = \"\";\r\n\r\n  if (password.length < totalLength) {\r\n    message = `Password must be at least ${totalLength} characters long.`;\r\n  } else if (lettersCount < minLetters) {\r\n    message = `Password must contain at least ${minLetters} letters.`;\r\n  } else if (specialCharsCount < minSpecialChars) {\r\n    message = `Password must contain at least ${minSpecialChars} special characters.`;\r\n  } else if (capitalLettersCount < minCapitalLetters) {\r\n    message = `Password must contain at least ${minCapitalLetters} capital letters.`;\r\n  }\r\n\r\n  return message;\r\n};\r\nexport default validatePassword;\r\n","import React, { useRef, useContext, useEffect, useState } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\n\r\ninterface ToggleButtonProps {\r\n  name: string; // Name prop to identify this toggle in the form context\r\n  label: string; // Label to display for the toggle\r\n}\r\n\r\nconst ToggleButton: React.FC<ToggleButtonProps> = ({ name, label }) => {\r\n  const formContext = useContext(FormContext);\r\n  const toggleRef = useRef<HTMLInputElement>(null);\r\n\r\n  if (!formContext) {\r\n    throw new Error(\"ToggleButton must be used within a FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // State to manage toggle state\r\n  const [isChecked, setIsChecked] = useState<boolean>(!!formData[name]);\r\n\r\n  // Register the toggle ref when the component mounts\r\n  useEffect(() => {\r\n    if (toggleRef.current) {\r\n      addRef(name, toggleRef); // Add toggle ref to context\r\n    }\r\n  }, [name]); // Include addRef to avoid missing dependency warning\r\n\r\n  // Handle change event\r\n  const handleToggleChange = () => {\r\n    const newValue = !isChecked; // Toggle the boolean value\r\n    setIsChecked(newValue); // Update local state\r\n\r\n    // Convert boolean to string before passing to handleChange\r\n    handleChange(name, newValue ? \"true\" : \"false\"); // Update the form context with the new string value\r\n  };\r\n\r\n  return (\r\n    <label className=\"inline-flex items-center cursor-pointer\">\r\n      <input\r\n        type=\"checkbox\"\r\n        ref={toggleRef}\r\n        checked={isChecked}\r\n        onChange={handleToggleChange}\r\n        className=\"sr-only peer\"\r\n      />\r\n      <div\r\n        className=\"relative w-11 h-6 bg-gray-200 rounded-full peer dark:bg-gray-700 \r\n          peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full \r\n          peer-checked:after:border-white after:content-[''] \r\n          after:absolute after:top-0.5 after:start-[2px] \r\n          after:bg-white after:border-gray-300 after:border \r\n          after:rounded-full after:h-5 after:w-5 after:transition-all \r\n          dark:border-gray-600 peer-checked:bg-blue-600\"\r\n      ></div>\r\n      <span className=\"ms-3 text-sm font-medium text-gray-400 dark:text-gray-500\">\r\n        {label}\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;\r\n","// src/components/formElements/SingleCheckboxList.tsx\r\nimport React, { useRef, useContext, useEffect } from \"react\";\r\nimport { FormContext } from \"../contexts/FormProvider\"; // Adjust path as necessary\r\n\r\ninterface Option {\r\n  label: string;\r\n  value: string; // Value to be stored in form data\r\n}\r\n\r\ninterface SingleCheckboxListProps {\r\n  options: Option[];\r\n  name: string;\r\n  className?: string; // Optional class name for additional styling\r\n  optionstyles?: React.CSSProperties; // Optional styles for the options\r\n}\r\n\r\nconst SingleCheckboxList: React.FC<SingleCheckboxListProps> = ({\r\n  options,\r\n  name,\r\n  className = \"\",\r\n  optionstyles = {},\r\n}) => {\r\n  const checkboxRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Accessing the form context\r\n  const formContext = useContext(FormContext);\r\n  if (!formContext) {\r\n    throw new Error(\"SingleCheckboxList must be used within FormProvider.\");\r\n  }\r\n\r\n  const { handleChange, formData, addRef } = formContext;\r\n\r\n  // Register the checkbox ref when the component mounts\r\n  useEffect(() => {\r\n    if (checkboxRef.current) {\r\n      addRef(name, checkboxRef); // Add ref to context\r\n    }\r\n    return () => {\r\n      // Optional cleanup if you want to remove ref on unmount\r\n      // removeRef(name);\r\n    };\r\n  }, [name, addRef]);\r\n\r\n  // Handle checkbox change and update form context\r\n  const handleCheckboxChange = (value: string) => {\r\n    // Update the form context with the selected value\r\n    handleChange(name, value);\r\n\r\n    // Optionally, clear any error state if needed\r\n    handleChange(`${name}_error`, \"\");\r\n  };\r\n\r\n  return (\r\n    <div className={`flex flex-col ${className}`} style={optionstyles}>\r\n      {options.map((option) => (\r\n        <div\r\n          key={option.value}\r\n          className=\"flex items-center ps-4 border border-gray-200 rounded dark:border-gray-700 mb-2\"\r\n        >\r\n          <input\r\n            ref={checkboxRef}\r\n            id={option.value}\r\n            type=\"checkbox\"\r\n            checked={formData[name] === option.value}\r\n            onChange={() => handleCheckboxChange(option.value)}\r\n            className=\"w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n          />\r\n          <label\r\n            htmlFor={option.value}\r\n            className=\"w-full py-4 ms-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\r\n          >\r\n            {option.label}\r\n          </label>\r\n        </div>\r\n      ))}\r\n      <div className=\"min-h-4\">\r\n        {formData[`${name}_error`] && (\r\n          <div className=\"text-red-500 text-sm\">\r\n            {formData[`${name}_error`]}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCheckboxList;\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","SuppressedError","FormContext","createContext","formData","handleChange","handleSubmit","addRef","refs","getRef","FormProvider","_a","children","_b","useState","setFormData","_c","setRefs","_jsx","Provider","value","name","prevData","callback","hasError","key","console","log","endsWith","replace","current","focus","alert","prevRefs","DatePickerField","placeholder","isRequired","_d","styles","_e","className","inputRef","useRef","formContext","useContext","Error","useEffect","_jsxs","id","onChange","e","inputValue","target","isValid","validateDate","concat","required","DropDownField","options","_f","_g","listItemsClassName","_h","listItemstyles","_j","isOpen","setIsOpen","onClick","find","opt","label","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","map","option","index","EmailField","error","test","validateEmail","Label","text","For","htmlFor","NumberInputField","min","max","errorMessage","numberValue","parseFloat","isNaN","undefined","toString","PhoneNumberField","validatePhoneNumber","SliderField","initialValue","sliderRef","throttle","useCallback","func","limit","lastFunc","lastRan","args","_i","clearTimeout","setTimeout","Date","now","throttledHandleChange","Number","tooltipPosition","width","left","TextAreaField","rows","validator","textAreaRef","validate","defaultValidators","alpha","numeric","alphanumeric","TextField","MyForm","onSubmit","buttonClasses","buttonStyles","formtitle","warn","preventDefault","PasswordConfirmation","minLetters","totalLength","minSpecialChars","minCapitalLetters","_k","passwordinputStyles","_l","passwordinputClassName","confirmRef","_m","setError","_o","showPassword","setShowPassword","validatePassword","password","lettersCount","match","specialCharsCount","capitalLettersCount","message","validatePassword2","togglePasswordVisibility","validationMessage","height","x1","x2","y1","y2","cx","cy","r","confirmValue","ToggleButton","toggleRef","isChecked","setIsChecked","checked","newValue","SingleCheckboxList","optionstyles","checkboxRef"],"mappings":"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","x_google_ignoreList":[0,1]}